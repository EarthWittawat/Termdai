from PIL import Image
import streamlit as st
from audiorecorder import audiorecorder
from pathlib import Path
import pathlib
import os
import os.path
from google.oauth2 import service_account
from google.cloud import storage

# Create API client.
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["gcp_service_account"]
)
client = storage.Client(credentials=credentials)

bucket_name = "termdai-bucket"
file_path = "report.csv"
bucket = client.bucket(bucket_name)
st.set_page_config(
    page_title="Termdai",
    layout="wide",
)
with st.sidebar:
    st.header("About this Project‚úî")
    st.header("Developersüë®‚Äçüíª")
    st.text("Wittawat Kitipatthavorn\nSoraat Treenuson\nPatcharapol Klinon")
    st.text(
        "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠\nFacebook: Wittawat Kitipatthavorn\nTel: 086-398-1093\nLine: wittawat_earth"
    )
with st.container():
    st.header("Termdai Data Collection üìÅ")
    st.header("‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏ó‡∏¢‡πÄ‡∏î‡∏¥‡∏° üé§")
    st.write("")
    st.subheader("‡∏Ç‡πâ‡∏≠‡∏û‡∏∂‡∏á‡∏õ‡∏é‡∏¥‡∏ö‡∏±‡∏ï‡∏¥*")
    
    st.write("1.‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Dashboard ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ")
    st.write("2.‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡πâ‡∏≤ '‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á' ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Refresh / F5")
    st.write("3.‡∏´‡∏≤‡∏Å‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡πÄ‡∏à‡∏≠ Bug & Error ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤'‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤'")
    st.write("")
    # data_check = f"./audio/"
    # count = {}
    # for audio in os.listdir(data_check):
    #     st.subheader(audio)
    #     for audio_ex in os.listdir(os.path.join(data_check, audio)):
    #         for root_dir, cur_dir, files in os.walk(
    #             os.path.join(data_check, audio, audio_ex)
    #         ):
    #             count[audio_ex] = len(files)
    #             st.write(
    #                 f'‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏á "{audio_ex}" ‡∏≠‡∏µ‡∏Å {100 - len(files)} ‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
    # st.write("")
    type = st.selectbox("‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î", [
                        "‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏≥", "‡∏Å‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏±‡∏ö‡∏£‡πâ‡∏≠‡∏á"])
    if type == "‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏≥":
        list_1 = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á", ["‡πÄ‡∏≠‡∏≠", "‡∏≠‡∏µ"])
        audio = audiorecorder("Click to record", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
        path = f"./audio/{type}/{list_1}"
        blobs = bucket.list_blobs(prefix=f"audio/{type}/{list_1}/")
        blobs_full = [file.name for file in blobs]
        st.subheader(f'‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏á "{list_1}" ‡∏≠‡∏µ‡∏Å {101 - len(blobs_full)} ‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
        if len(audio) > 0:
            st.audio(audio.tobytes())
            if st.button('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô'):
                # To play audio in frontend:

                # To save audio to a file:
                count = len(blobs_full)
                wav_file = open(
                    f"./audio/{type}/{list_1}/{list_1}({count}).mp3", "wb")
                wav_file.write(audio.tobytes())
  
                blob = bucket.blob(f"audio/{type}/{list_1}/{list_1}({count}).mp3")
                blob.upload_from_filename(f"./audio/{type}/{list_1}/{list_1}({count}).mp3")
                st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
    if type == "‡∏Å‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏±‡∏ö‡∏£‡πâ‡∏≠‡∏á":
        list_2 = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏±‡∏ö‡∏£‡πâ‡∏≠‡∏á", [
                              "‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á", "‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á"])
        audio = audiorecorder("Click to record", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
        path = f"./audio/{type}/{list_2}"
        blobs = bucket.list_blobs(prefix=f"audio/{type}/{list_2}/")
        blobs_full = [file.name for file in blobs]
        st.subheader(f'‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏á "{list_2}" ‡∏≠‡∏µ‡∏Å {101 - len(blobs_full)} ‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
        if len(audio) > 0:
            st.audio(audio.tobytes())
            if st.button('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô'):
            # To play audio in frontend:

                # To save audio to a file:
                count = len(blobs_full)
                wav_file = open(
                    f"./audio/{type}/{list_2}/{list_2}({count}).mp3", "wb")
                wav_file.write(audio.tobytes())
  
                blob = bucket.blob(f"audio/{type}/{list_2}/{list_2}({count}).mp3")
                blob.upload_from_filename(f"./audio/{type}/{list_2}/{list_2}({count}).mp3")
                st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
